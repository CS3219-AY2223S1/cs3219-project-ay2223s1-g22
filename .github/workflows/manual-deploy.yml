name: "Push Image to GCR and Deploy GCP"

on:
  workflow_dispatch:
    inputs:
      service-name:
        description: "Which service to deploy"
        required: true
        type: choice
        options:
          - matching-service
          - frontend

# Environment variables available to all jobs and steps in this workflow; examples of usage:
#  GKE_EMAIL: ${{ secrets.GKE_EMAIL }}
#  GKE_KEY: ${{ secrets.GKE_KEY }}
env:
  GITHUB_SHA: ${{ github.sha }}
  GITHUB_REF: ${{ github.ref }}
  IMAGE: ${{ inputs.service-name }}
  REGISTRY_HOSTNAME: gcr.io
  PROJECT_ID: cs3219-project-ay2223s1-g22

jobs:
  setup-build-publish:
    name: Setup, Build, and Publish
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # Setup gcloud CLI
      - uses: google-github-actions/setup-gcloud@v0.6.0
        with:
          version: "270.0.0"
          service_account_key: ${{ secrets.GCR_KEY }}

      # Configure docker to use the gcloud command-line tool as a credential helper
      - run: |
          # Set up docker to authenticate
          # via gcloud command-line tool.
          gcloud auth configure-docker

      # Build the Docker image
      - name: Build
        run: |
          export TAG=`echo $GITHUB_REF | awk -F/ '{print $NF}'`
          echo $TAG
          docker build -t "$REGISTRY_HOSTNAME"/$PROJECT_ID/"$IMAGE":"$TAG" \
            --target build \
            --build-arg GITHUB_SHA="$GITHUB_SHA" \
            --build-arg GITHUB_REF="$GITHUB_REF" ./${{ inputs.service-name }}

      # Push the Docker image to Google Container Registry
      - name: Publish
        run: |
          export TAG=`echo $GITHUB_REF | awk -F/ '{print $NF}'`
          echo $TAG
          docker push "$REGISTRY_HOSTNAME"/$PROJECT_ID/"$IMAGE":"$TAG"
          docker tag "$REGISTRY_HOSTNAME"/$PROJECT_ID/"$IMAGE":"$TAG" "$REGISTRY_HOSTNAME"/$PROJECT_ID/"$IMAGE":latest
          docker push "$REGISTRY_HOSTNAME"/$PROJECT_ID/"$IMAGE":latest
          docker tag "$REGISTRY_HOSTNAME"/$PROJECT_ID/"$IMAGE":latest "$REGISTRY_HOSTNAME"/$PROJECT_ID/"$IMAGE":"$GITHUB_SHA"
          docker push "$REGISTRY_HOSTNAME"/$PROJECT_ID/"$IMAGE":"$GITHUB_SHA"

  deploy:
    name: "Deploy"
    runs-on: ubuntu-latest
    needs: setup-build-publish
    defaults:
      run:
        working-directory: ./terraform
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          # terraform_version: 0.13.0:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Format
        id: fmt
        run: terraform fmt

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform plan -no-color -input=false
        continue-on-error: true

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve -input=false -var ${{ inputs.service-name }}_image_tag="$GITHUB_SHA"
